from typing import Annotated, Dict, List, Optional
from pydantic import AfterValidator, BaseModel, Field

from app.utils.enums.ChatBotLanguageEnum import ChatBotLanguage
from app.utils.enums.CommunicateTypeEnum import CommunicateType
from app.utils.validators.validate_chat_bot_unique_nodes_id import ensure_unique_nodes

class ServiceHookRequest(BaseModel):
    service_type: Optional[str] = Field(None, description="Service type if node calls external service")
    service_action: Optional[str] = Field(None, description="Service action to perform")
    on_success: Optional[str] = Field(None, description="Next node ID on service success")
    on_failure: Optional[str] = Field(None, description="Next node ID on service failure")

class FlowNodeRequest(BaseModel):

    id: str = Field(description="Unique node ID generated by frontend")
    type: str = Field(description="Node type: 'message', 'input', 'condition', 'service', 'agent'")
    name: Optional[str] = Field(None, description="Display name for the node")
    text: Optional[Dict[str, str]] = Field(None, description="Text content by language {'en': 'Hello', 'ar': 'مرحبا'}")
    buttons: Optional[Dict[str, str]] = Field(None, description="Button options by language")
    body: Optional[Dict[str, str]] = Field(None, description="Body content by language")
    is_final: Optional[bool] = Field(False, description="Whether this is an end node")
        
    next_nodes: Optional[List[str]] = Field([], description="List of connected node IDs")
    position: Optional[Dict[str, float]] = Field(None, description="Node position in canvas {'x': 100, 'y': 200}")
    
    service_hook: Optional[ServiceHookRequest] = Field(None, description="Service hook configuration for external calls")

class CreateChatBotRequest(BaseModel):

    name: str = Field(description="ChatBot name")
    language: ChatBotLanguage = Field(default=ChatBotLanguage.ENGLISH, description="Default language")    
    nodes: Annotated[List[FlowNodeRequest],AfterValidator(ensure_unique_nodes)]
    first_node_id: str = Field(description="ID of the starting node")
    
    version: Optional[float] = Field(1.0, description="ChatBot version")
